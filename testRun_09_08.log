import logging
import datetime

logFileName = "System" + datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S") + ".log"

# Konfiguriere den Logger
logging.basicConfig(filename="logFileName.log", format="%(asctime)s [%(levelname)s]: %(message)s", level=logging.INFO)




from restAPI import RestAPI
import time
from multiprocessing import Queue, Manager
import threading
from MainSystem import MainSystem
import sys

# Holen Sie sich den Logger
logger = logging.getLogger(__name__)

# Schreibe 10 Log-Einträge
for i in range(1, 11):
    logger.info(f"Dies ist Log-Eintrag {i}")

print("Log-Einträge wurden erstellt und in 'demo.log' gespeichert.")


def brokenSensorTest():
    manager = Manager()
    reqChannel = manager.list()
    respChannel = manager.list()
    mainSystem = MainSystem(reqChannel=reqChannel,respChannel=respChannel)
    systemInfoBeforeTest = mainSystem.systemInfo()
    mainSystem.startBrokenSensor("Duengerautomat_Monitor")
    systemInfoAfterTest = mainSystem.systemInfo()
    print("done")

def test1():
    manager = Manager()
    reqChannel = manager.list()
    respChannel = manager.list()
    mainSystem = MainSystem(reqChannel=reqChannel,respChannel=respChannel)
    print(f"scheduler init: {mainSystem.statusScheduler()}")
    mainSystem.startScheduler()
    print(f"scheduler after 1st start: {mainSystem.statusScheduler()}")
    mainSystem.stopScheduler()
    time.sleep(20)
    print(f"scheduler after 1st stop: {mainSystem.statusScheduler()}")
    mainSystem.startScheduler()
    print(f"scheduler after 2st start: {mainSystem.statusScheduler()}")
    time.sleep(3)
    mainSystem.stopScheduler()
    print(f"scheduler after 2st stop: {mainSystem.statusScheduler()}")

def normalMode():
    #normal mode
    print("normal mode")
    manager = Manager()
    reqChannel = manager.list()
    respChannel = manager.list()
    mainSystem = MainSystem(reqChannel=reqChannel,respChannel=respChannel)
    restAPI = RestAPI(reqChannel=reqChannel,respChannel=respChannel,mainSystem=mainSystem)
    mainSystem.startScheduler()
    restAPI.run()



#if as argument test is given then run test mode
if len(sys.argv) > 1 and sys.argv[1] == "test1":
    test1()
elif len(sys.argv) > 1 and sys.argv[1] == "brokenSensorTest":
    brokenSensorTest()
else:
    normalMode()

print("init done")
